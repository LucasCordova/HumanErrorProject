@page "{id}/{state}"
@using System.Linq
@using Microsoft.EntityFrameworkCore
@model StateModel
@{
}

@section Navbar
{
    <partial name="_CourseClassNavbarPartial" model="@Model.MarkovModel.Assignment.CourseClassId" />
    <partial name="_AssignmentNavbarPartial" model="@Model.MarkovModel.AssignmentId" />
}

<div class="container mb-5">
    <div class="mx-auto text-center">
        <h1 class="font-weight-bold display-4">
            State @Model.MarkovModelState.Number
        </h1>
        <h3 class="font-weight-bold display-4">
            @Model.MarkovModel.Publish.ToString("dd MMMM yyyy") Markov Model
        </h3>
        <ul class="list-inline">
            <li class="list-inline-item">@Model.MarkovModel.Assignment.Name</li>
            <li class="list-inline-item">
                -
            </li>
            <li class="list-inline-item">
                @Model.MarkovModel.Assignment.CourseClass.Name
            </li>
        </ul>
        <p class="lead">
            @await Html.PartialAsync("Shared/_MarkovModelFinishedPartial", Model.MarkovModel)
        </p>
        <div class="btn btn-group">
            <a class="btn btn-primary text-light"
               asp-page="/Analysis/Markov/Details"
               asp-route-id="@Model.MarkovModel.Id"
               role="button">
                Markov Model
            </a>
            <a class="btn btn-primary text-light"
               asp-page="/Analysis/Markov/Index"
               asp-route-id="@Model.MarkovModel.AssignmentId"
               role="button">
                Back to list
            </a>
            <a class="btn btn-primary text-light"
               asp-page="/Analysis/Index"
               asp-route-id="@Model.MarkovModel.AssignmentId"
               role="button">
                Analysis List
            </a>
            <a class="btn btn-primary text-light"
               asp-page="/Analysis/Details"
               asp-route-id="@Model.MarkovModel.AssignmentId"
               role="button">
                Details
            </a>
        </div>
    </div>
</div>

<div class="container shadow-sm bg-light my-3 pt-3 pb-5 px-5">
    <div class="mx-auto text-center">
        <h2 class="display-4">
            Snapshots
        </h2>
    </div>
    <div class="row">
        <div class="container-fluid">
            @{
                var snapshots = await Model.Snapshots.Include(x => x.SnapshotSubmission)
                    .Include(x => x.Student).Where(x => Model.MarkovModelState.Snapshots.Any(y => y.SnapshotId.Equals(x.Id))).ToListAsync();
                var excluded = Model.MarkovModelState.Snapshots.Count(x => snapshots.All(y => !y.Id.Equals(x.SnapshotId)));
                var students = snapshots.GroupBy(
                    s => s.StudentId,
                    s => s,
                    (key, g) => new { Id = key, Snapshots = g.ToList() });
            }
            @foreach (var student in students)
            {
                var color = Model.ColorHelper.RandomColor();
                <a class="btn text-dark" style="border-color: @color; border-width: 2px;">
                    @student.Snapshots.First().Student.Name
                    <span class="badge btn-dark">
                        @student.Snapshots.Count
                    </span>
                </a>
                @foreach (var snapshot in student.Snapshots)
                {
                    <a asp-page="/Snapshots/AdminDetails"
                       asp-route-id="@snapshot.Id"
                       asp-route-returnUrl="@Model.ReturnUrl"
                       style="border-color: @color; border-width: 2px;"
                       class="btn text-dark" role="button">
                        @snapshot.SnapshotSubmission.CreatedDateTime.ToString("dd MMMM yyyy")
                    </a>
                }
            }
            @if (excluded > 0)
            {
                <p class="lead">
                    @excluded snapshots deleted.
                </p>
            }
        </div>
    </div>
</div>

<div class="container shadow-sm bg-light my-3 pt-3 pb-5 px-5">
    <div class="mx-auto text-center">
        <h2 class="display-4">
            Snapshots
        </h2>
    </div>
    <table class="table table-striped mt-3">
        <thead>
        <tr>
            <th class="text-center">
                To
            </th>
            <th class="text-center">
                Probability
            </th>
        </tr>
        </thead>
        <tbody>
            @foreach (var transition in Model.MarkovModelState.Transitions)
            {
                <tr>
                    <td class="text-center">
                        <a asp-page="/Analysis/Markov/State"
                           asp-route-id="@Model.Id"
                           asp-route-state="@transition.To">
                            State @transition.To
                        </a>
                    </td>
                    <td class="text-center">
                        @((transition.Probability * 100).ToString("F0") + "%")
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
